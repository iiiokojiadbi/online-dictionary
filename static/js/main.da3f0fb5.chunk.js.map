{"version":3,"sources":["components/Header/Header.module.css","components/InfoPopup/InfoPopup.module.css","components/SearchPanel/SearchPanel.module.css","components/App/App.module.css","components/WordBoard/WordBoard.module.css","components/Input/Input.module.css","components/ListItems/ListItems.module.css","service/Api.js","components/Header/Header.js","context/SearchValueContext.js","components/Input/Input.js","context/HandleSetPathOfSpeechContext.js","components/FilterSpeech/FilterSpeech.js","context/IsStarredContext.js","components/SearchPanel/SearchPanel.js","components/ItemList/ItemList.js","context/ListWordsContext.js","context/HandleStarredWordContext.js","context/HandleOpenInfoPopup.js","components/ListItems/ListItems.js","components/WordBoard/WordBoard.js","components/InfoPopup/InfoPopup.js","service/Storage.js","components/App/App.js","index.js","components/ItemList/ItemList.module.css","components/FilterSpeech/FilterSpeech.module.css"],"names":["module","exports","DictionaryApi","_baseUrl","_baseHeaders","_limitWords","_countPage","_pronunciationPattern","_getBaseResource","a","url","fetch","method","headers","response","ok","Error","status","json","body","getListWords","word","listWords","_transformListItem","getInfoWord","responseData","results","data","Header","toggleKeeper","toggleStarred","className","classes","header","activeClassName","active","link","exact","to","onClick","SearchValueContext","React","createContext","Input","useContext","handleChangeSearch","inputWord","useState","inputValue","setInputValue","input","placeholder","value","onChange","evt","target","HandleSetPathOfSpeechContext","FilterSpeech","handlseSetPathOfSpeech","pathOfSpeech","setPathOfSpeech","useEffect","handleChangeCheckbox","filterSpeech","label","checkbox","name","type","checked","title","IsStarredContext","SearchPanel","filter","searchPanel","wrapper","ItemList","starred","draggable","handleClickStar","handleOpenInfo","isEmpty","isStarred","item","findStar","id","onDragStart","dataTransfer","setData","classList","add","onDragOver","stopPropagation","onDragEnd","remove","info","undefined","partOfSpeech","definition","Fragment","key","burger","brief","part","star","star__active","renderResults","ListWordsContext","HandleStarredWordContext","HandleOpenInfoPopup","ListItems","handleStarredWord","handleUpdateStorageStarred","handleOpenInfoPopup","afterElementPosition","setAfterElementPosition","elementDrop","setElementDrop","updateLocalStorage","useCallback","newPostion","words","map","items","length","listItems","onDrop","preventDefault","card_id","getData","card","document","getElementById","element","container","y","clientY","querySelectorAll","subscribeDraggableElements","reduce","closest","child","box","getBoundingClientRect","offset","top","height","Number","NEGATIVE_INFINITY","appendChild","insertBefore","find","afterWordIndex","findIndex","WordBoard","wordBoard","Component","InfoPopup","pronunciation","onClose","isOpen","handleEscListener","addEventListener","removeEventListener","spelling","all","popup","popupDisabled","contains","close","center","list","i","itemList","accent","Storage","localStorage","JSON","stringify","parse","starredWords","this","refreshStorage","App","_api","_storage","state","filterPathOfSpeech","isInfoPopupOpen","handleRefreshStorageStarredWords","starredWordsDeleteWord","beforeStarred","slice","afterStarred","setState","handleSetPathOfSpeech","handleChangeSearchWord","handleChangeOnKeeper","handleChangeOnStarred","newListWord","handleClickWord","handleInfoPopupOpen","wordInfo","handleClosePopup","initialRender","getInitialData","window","location","pathname","prevProps","prevState","refreshListWords","then","w","infWord","array","additionalArray","uniqSortListWords","_","uniqWith","sort","prev","next","includes","isEqual","newListWordsWithStar","itemKeep","starKeep","itemStar","filterPathOfSpeechStarredWord","filterWordsPathOfSpeech","filterStarredWords","app","Provider","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.da3f0fb5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"link\":\"Header_link__2wI74\",\"active\":\"Header_active__vmCnS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"InfoPopup_popup__3iz_X\",\"popupDisabled\":\"InfoPopup_popupDisabled__2M0Lg\",\"container\":\"InfoPopup_container__stU4w\",\"close\":\"InfoPopup_close__3p1Hj\",\"info\":\"InfoPopup_info__1xa1Q\",\"title\":\"InfoPopup_title__2SMmD\",\"center\":\"InfoPopup_center__NTSv9\",\"list\":\"InfoPopup_list__1ZAT1\",\"spelling\":\"InfoPopup_spelling__2ZqOa\",\"itemList\":\"InfoPopup_itemList__1RgR_\",\"accent\":\"InfoPopup_accent___lff8\",\"partOfSpeech\":\"InfoPopup_partOfSpeech__1tg6L\",\"definition\":\"InfoPopup_definition__bXoqs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchPanel\":\"SearchPanel_searchPanel__3T86m\",\"wrapper\":\"SearchPanel_wrapper__3u7e8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1IksY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wordBoard\":\"WordBoard_wordBoard__26mTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3PNbO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItems\":\"ListItems_listItems__3UYJd\"};","export default class DictionaryApi {\n  _baseUrl = 'https://wordsapiv1.p.rapidapi.com/words';\n  _baseHeaders = {\n    'x-rapidapi-host': 'wordsapiv1.p.rapidapi.com',\n    'x-rapidapi-key': 'c83ecd7197msh753cd144a215978p1637dfjsnf0d0ef5beb95',\n  };\n  _limitWords = 'limit=10';\n  _countPage = 'page=1';\n  _pronunciationPattern = 'pronunciationpattern=.*æm$';\n\n  _getBaseResource = async ({ url }) => {\n    const response = await fetch(`${this._baseUrl}/${url}`, {\n      method: 'GET',\n      headers: this._baseHeaders,\n    });\n    if (!response.ok) {\n      throw new Error(`Could not fetch ${url}, received ${response.status}`);\n    }\n    const body = await response.json();\n    return body;\n  };\n\n  getListWords = async ({ word }) => {\n    const url = `?letterPattern=^${word}&${this._pronunciationPattern}&${this._limitWords}&${this._countPage}`;\n    const listWords = this._transformListItem(\n      await this._getBaseResource({ url })\n    );\n    return listWords;\n  };\n\n  getInfoWord = async (word) => {\n    const response = await this._getBaseResource({ url: word });\n    return response;\n  };\n\n  _transformListItem = (responseData) => responseData.results.data;\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './Header.module.css';\n\nconst Header = ({ toggleKeeper, toggleStarred }) => {\n  return (\n    <header className={classes.header}>\n      <NavLink\n        activeClassName={classes.active}\n        className={classes.link}\n        exact\n        to=\"/online-dictionary/\"\n        onClick={toggleKeeper}\n      >\n        Word Keeper\n      </NavLink>\n      <NavLink\n        activeClassName={classes.active}\n        className={classes.link}\n        to=\"/online-dictionary/starred\"\n        onClick={toggleStarred}\n      >\n        Starred Words\n      </NavLink>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nexport const SearchValueContext = React.createContext();\n","import React, { useState, useContext } from 'react';\nimport classes from './Input.module.css';\n\nimport { SearchValueContext } from './../../context/SearchValueContext';\n\nconst Input = () => {\n  const { handleChangeSearch, inputWord = '' } = useContext(SearchValueContext);\n\n  const [inputValue, setInputValue] = useState(inputWord);\n\n  const handleChange = (evt) => {\n    const { value } = evt.target;\n    handleChangeSearch({ word: value });\n    setInputValue(value);\n  };\n\n  return (\n    <input\n      className={classes.input}\n      placeholder=\"Type to search\"\n      value={inputValue}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default Input;\n","import React from 'react';\n\nexport const HandleSetPathOfSpeechContext = React.createContext();\n","import React, { useState, useEffect, useContext } from 'react';\nimport classes from './FilterSpeech.module.css';\n\nimport { HandleSetPathOfSpeechContext } from './../../context/HandleSetPathOfSpeechContext';\n\nconst FilterSpeech = () => {\n  const handlseSetPathOfSpeech = useContext(HandleSetPathOfSpeechContext);\n\n  const [pathOfSpeech, setPathOfSpeech] = useState('');\n\n  useEffect(() => {\n    handlseSetPathOfSpeech({ pathOfSpeech });\n  }, [pathOfSpeech, handlseSetPathOfSpeech]);\n\n  const handleChangeCheckbox = (evt) => {\n    const { value } = evt.target;\n    if (pathOfSpeech === value) {\n      setPathOfSpeech('');\n    } else {\n      setPathOfSpeech(value);\n    }\n  };\n\n  return (\n    <div className={classes.filterSpeech}>\n      <label className={classes.label}>\n        <input\n          className={classes.checkbox}\n          name=\"pathofspeech\"\n          type=\"checkbox\"\n          value=\"noun\"\n          checked={pathOfSpeech === 'noun'}\n          onChange={handleChangeCheckbox}\n        />\n        <span className={classes.title}>noun</span>\n      </label>\n      <label className={classes.label}>\n        <input\n          className={classes.checkbox}\n          name=\"pathofspeech\"\n          type=\"checkbox\"\n          value=\"verb\"\n          checked={pathOfSpeech === 'verb'}\n          onChange={handleChangeCheckbox}\n        />\n        <span className={classes.title}>verb</span>\n      </label>\n      <label className={classes.label}>\n        <input\n          className={classes.checkbox}\n          name=\"pathofspeech\"\n          type=\"checkbox\"\n          value=\"adjective\"\n          checked={pathOfSpeech === 'adjective'}\n          onChange={handleChangeCheckbox}\n        />\n        <span className={classes.title}>adjective</span>\n      </label>\n    </div>\n  );\n};\n\nexport default FilterSpeech;\n","import React from 'react';\n\nexport const IsStarredContext = React.createContext();\n","import React, { useContext } from 'react';\nimport classes from './SearchPanel.module.css';\nimport Input from './../Input/Input';\nimport FilterSpeech from './../FilterSpeech/FilterSpeech';\n\nimport { IsStarredContext } from './../../context/IsStarredContext';\n\nconst SearchPanel = () => {\n  const isStarredBoard = useContext(IsStarredContext);\n\n  const filter = isStarredBoard ? <FilterSpeech /> : null;\n\n  return (\n    <div className={classes.searchPanel}>\n      <div className={classes.wrapper}>\n        <Input />\n        {filter}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchPanel;\n","import React, { useContext } from 'react';\nimport classes from './ItemList.module.css';\n\nimport { IsStarredContext } from './../../context/IsStarredContext';\n\nconst ItemList = ({\n  word,\n  results,\n  starred,\n  draggable,\n  handleClickStar,\n  handleOpenInfo,\n  isEmpty = false,\n}) => {\n  const isStarred = useContext(IsStarredContext);\n\n  const dragStart = (evt) => {\n    evt.dataTransfer.setData('card_id', evt.target.id);\n    evt.target.classList.add('dragging');\n  };\n\n  const dragOver = (evt) => {\n    evt.stopPropagation();\n  };\n\n  const dragEnd = (evt) => {\n    evt.target.classList.remove('dragging');\n  };\n\n  const renderResults = (info) => {\n    const infoWord = info !== undefined ? info['0'] : null;\n    const { partOfSpeech, definition } = infoWord || {\n      partOfSpeech: 'missing',\n      definition: 'is missing',\n    };\n\n    const domElements = (\n      <React.Fragment key={word}>\n        <div className={classes.burger}></div>\n        <div className={classes.brief} onClick={handleOpenInfo}>\n          <span className={classes.name}>{word}</span>\n          <span className={classes.part}>{partOfSpeech}</span>\n          <span className={classes.definition}>Definition: {definition}</span>\n        </div>\n        <button\n          type=\"button\"\n          onClick={handleClickStar}\n          className={`${classes.star} ${starred ? classes.star__active : null}`}\n        ></button>\n      </React.Fragment>\n    );\n\n    return domElements;\n  };\n\n  if (!isEmpty) {\n    return (\n      <li\n        id={word}\n        onDragStart={dragStart}\n        onDragOver={dragOver}\n        onDragEnd={dragEnd}\n        draggable={draggable}\n        className={`${classes.item} ${draggable ? 'draggable' : ''}`}\n      >\n        {renderResults(results)}\n      </li>\n    );\n  }\n  if (isStarred && isEmpty) {\n    return (\n      <li className={classes.item}>\n        <span className={classes.findStar}>\n          Starred words were not found. Check the filters or find new words for\n          the starred list\n        </span>\n      </li>\n    );\n  }\n  if (isEmpty) {\n    return (\n      <li className={classes.item}>\n        <span className={classes.findStar}>\n          Start searching for interesting words\n        </span>\n      </li>\n    );\n  }\n};\n\nexport default ItemList;\n","import React from 'react';\n\nexport const ListWordsContext = React.createContext();\n","import React from 'react';\n\nexport const HandleStarredWordContext = React.createContext();\n","import React from 'react';\n\nexport const HandleOpenInfoPopup = React.createContext();\n","import React, { useContext, useEffect, useState, useCallback } from 'react';\nimport classes from './ListItems.module.css';\nimport ItemList from './../ItemList/ItemList';\n\nimport { ListWordsContext } from './../../context/ListWordsContext';\nimport { HandleStarredWordContext } from './../../context/HandleStarredWordContext';\nimport { HandleOpenInfoPopup } from './../../context/HandleOpenInfoPopup';\nimport { IsStarredContext } from './../../context/IsStarredContext';\n\nconst ListItems = () => {\n  const listWords = useContext(ListWordsContext);\n  const { handleStarredWord, handleUpdateStorageStarred } = useContext(\n    HandleStarredWordContext\n  );\n  const handleOpenInfoPopup = useContext(HandleOpenInfoPopup);\n  const isStarred = useContext(IsStarredContext);\n\n  const [afterElementPosition, setAfterElementPosition] = useState(0);\n  const [elementDrop, setElementDrop] = useState('');\n\n  const updateLocalStorage = useCallback(handleUpdateStorageStarred);\n\n  useEffect(() => {\n    if (isStarred && elementDrop && afterElementPosition) {\n      updateLocalStorage({\n        newPostion: afterElementPosition,\n        elementDrop: elementDrop,\n      });\n    }\n  }, [elementDrop, afterElementPosition]);\n\n  const drop = (evt) => {\n    if (isStarred) {\n      evt.preventDefault();\n      const card_id = evt.dataTransfer.getData('card_id');\n      const card = document.getElementById(card_id);\n      const { element } = getDragAfterElement(evt.target, evt.clientY);\n      if (element == null) {\n        evt.target.appendChild(card);\n      } else {\n        evt.target.insertBefore(card, element);\n      }\n\n      const word = listWords.find((item) => item.word === card.id);\n      const afterWordIndex = listWords.findIndex(\n        (item) => item.word === element.id\n      );\n\n      setElementDrop(word);\n      setAfterElementPosition(afterWordIndex);\n    }\n  };\n\n  const dragOver = (evt) => {\n    evt.preventDefault();\n  };\n\n  const dragEnd = (evt) => {\n    evt.preventDefault();\n  };\n\n  const words = listWords\n    ? listWords.map((word) => {\n        return (\n          <ItemList\n            key={word.word}\n            {...word}\n            draggable={isStarred}\n            handleClickStar={() => {\n              handleStarredWord({ word });\n            }}\n            handleOpenInfo={() => {\n              handleOpenInfoPopup({ word: word });\n            }}\n          />\n        );\n      })\n    : null;\n\n  const items = !words.length ? <ItemList isEmpty /> : words;\n\n  return (\n    <ul\n      className={classes.listItems}\n      onDrop={drop}\n      onDragOver={dragOver}\n      onDragEnd={dragEnd}\n      id={'container'}\n    >\n      {items}\n    </ul>\n  );\n};\n\nexport default ListItems;\n\nfunction getDragAfterElement(container, y) {\n  const draggableElements = subscribeDraggableElements(container);\n\n  return draggableElements.reduce(\n    (closest, child) => {\n      const box = child.getBoundingClientRect();\n      const offset = y - box.top - box.height / 2;\n      if (offset < 0 && offset > closest.offset) {\n        return { offset: offset, element: child };\n      } else {\n        return closest;\n      }\n    },\n    { offset: Number.NEGATIVE_INFINITY }\n  );\n}\n\nfunction subscribeDraggableElements(container) {\n  return [...container.querySelectorAll('.draggable:not(.dragging)')];\n}\n","import React, { Component } from 'react';\nimport classes from './WordBoard.module.css';\nimport SearchPanel from './../SearchPanel/SearchPanel';\nimport ListItems from './../ListItems/ListItems';\n\nexport default class WordBoard extends Component {\n  render() {\n    return (\n      <section className={classes.wordBoard}>\n        <SearchPanel />\n        <ListItems />\n      </section>\n    );\n  }\n}\n","import React, { useEffect } from 'react';\nimport classes from './InfoPopup.module.css';\n\nfunction InfoPopup({ word, pronunciation, results, onClose, isOpen }) {\n  useEffect(() => {\n    const handleEscListener = (evt) => {\n      if (evt.key === 'Escape') onClose();\n    };\n\n    if (isOpen) document.addEventListener('keydown', handleEscListener);\n\n    return () => document.removeEventListener('keydown', handleEscListener);\n  }, [isOpen, onClose]);\n\n  const handleOverlayClick = (evt) => {\n    if (evt.target.classList.contains(classes.popup)) onClose();\n  };\n\n  const spelling = pronunciation?.all || '';\n\n  const renderAdditionalDefinition = () => {\n    if (results) {\n      return results.map((item, i) => {\n        return (\n          <li key={i} className={classes.itemList}>\n            <span className={classes.partOfSpeech}>\n              <span className={classes.accent}> Path of speech: </span>\n              {item.partOfSpeech}\n            </span>\n            <span className={classes.definition}>\n              <span className={classes.accent}>Definition: </span>\n              {item.definition}\n            </span>\n          </li>\n        );\n      });\n    } else {\n      return (\n        <li className={classes.itemList}>\n          <span className={classes.partOfSpeech}>\n            <span className={classes.accent}> Path of speech: </span>is missing\n          </span>\n          <span className={classes.definition}>\n            <span className={classes.accent}>Definition: </span>is missing\n          </span>\n        </li>\n      );\n    }\n  };\n\n  return (\n    <section\n      className={`${classes.popup} ${!isOpen ? classes.popupDisabled : ''}`}\n      onClick={handleOverlayClick}\n    >\n      <div className={classes.container}>\n        <button\n          type=\"button\"\n          className={classes.close}\n          onClick={onClose}\n        ></button>\n        <div className={classes.info}>\n          <h2 className={`${classes.title} ${!spelling && classes.center}`}>\n            {word}\n          </h2>\n          {spelling && <span className={classes.spelling}>{spelling}</span>}\n          <ul className={classes.list}>{renderAdditionalDefinition()}</ul>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default InfoPopup;\n","export default class Storage {\n  refreshStorage(key, value) {\n    localStorage[key] = JSON.stringify(value);\n  }\n\n  getData(key) {\n    return JSON.parse(localStorage[key]);\n  }\n\n  getInitialData() {\n    const initialStorage = {\n      starredWords: this.getData('starredWords'),\n    };\n\n    return initialStorage;\n  }\n\n  initialRender() {\n    if (!localStorage.starredWords) {\n      this.refreshStorage('starredWords', []);\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport classes from './App.module.css';\nimport './../../fonts/PTSans.css';\nimport DictionaryApi from './../../service/Api';\nimport Header from './../Header/Header';\nimport WordBoard from './../WordBoard/WordBoard';\nimport InfoPopup from './../InfoPopup/InfoPopup';\n\nimport { ListWordsContext } from './../../context/ListWordsContext';\nimport { SearchValueContext } from './../../context/SearchValueContext';\nimport { HandleStarredWordContext } from './../../context/HandleStarredWordContext';\nimport { HandleSetPathOfSpeechContext } from './../../context/HandleSetPathOfSpeechContext';\nimport { IsStarredContext } from './../../context/IsStarredContext';\nimport { HandleOpenInfoPopup } from './../../context/HandleOpenInfoPopup';\n\nimport Storage from './../../service/Storage';\n\nimport _ from 'lodash';\n\nexport default class App extends Component {\n  _api = new DictionaryApi();\n  _storage = new Storage();\n\n  state = {\n    listWords: [],\n    starredWords: [],\n    filterPathOfSpeech: '',\n    isInfoPopupOpen: false,\n    isStarred: false,\n  };\n\n  componentDidMount() {\n    this._storage.initialRender();\n    const { starredWords } = this._storage.getInitialData();\n    this.setState({\n      starredWords: starredWords,\n      word: '',\n      isStarred: window.location.pathname === '/online-dictionary/starred',\n      wordInfo: null,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.state.word !== '' &&\n      this.state.word !== prevState.word &&\n      this.state.isStarred === false\n    ) {\n      this.refreshListWords();\n    }\n    if (this.state.starredWords !== prevState.starredWords) {\n      this._storage.refreshStorage('starredWords', this.state.starredWords);\n    }\n    // if (this.state.listWords !== prevState.listWords) {\n    //   this._storage.refreshStorage('findWords', this.state.listWords);\n    // }\n  }\n\n  handleRefreshStorageStarredWords = ({ newPostion, elementDrop }) => {\n    const { starredWords } = this.state;\n    const word = starredWords.find((item) => item.word === elementDrop.word);\n    const starredWordsDeleteWord = starredWords.filter(\n      (item) => item.word !== word.word\n    );\n    const beforeStarred = starredWordsDeleteWord.slice(0, newPostion);\n    const afterStarred = starredWordsDeleteWord.slice(\n      newPostion,\n      starredWords.length\n    );\n    this.setState({\n      starredWords: [...beforeStarred, word, ...afterStarred],\n    });\n  };\n\n  refreshListWords() {\n    const { word } = this.state;\n    this.setState({\n      listWords: [],\n    });\n    this._api.getListWords({ word }).then(async (listWords) => {\n      listWords.map(async (w) => {\n        const infWord = { ...(await this._api.getInfoWord(w)), starred: false };\n        this.setState({\n          listWords: [...this.state.listWords, infWord],\n        });\n      });\n    });\n  }\n\n  handleSetPathOfSpeech = ({ pathOfSpeech }) => {\n    this.setState({\n      filterPathOfSpeech: pathOfSpeech,\n    });\n  };\n\n  handleChangeSearchWord = ({ word }) => {\n    this.setState({\n      word: word,\n    });\n  };\n\n  handleChangeOnKeeper = () => {\n    this.setState({\n      isStarred: false,\n    });\n  };\n\n  handleChangeOnStarred = () => {\n    this.setState({\n      isStarred: true,\n    });\n  };\n\n  handleStarredWord = ({ word }) => {\n    if (!word.starred) {\n      this.setState({\n        starredWords: [...this.state.starredWords, { ...word, starred: true }],\n      });\n    } else {\n      const newListWord = this.state.starredWords.filter(\n        (item) => item.word !== word.word\n      );\n      this.setState({\n        starredWords: [...newListWord],\n      });\n    }\n  };\n\n  handleClickWord = ({ word }) => {\n    this.handleInfoPopupOpen();\n    this.setState({\n      wordInfo: word,\n    });\n  };\n\n  handleInfoPopupOpen = () => {\n    this.setState({\n      isInfoPopupOpen: true,\n    });\n  };\n\n  handleClosePopup = () => {\n    this.setState({\n      isInfoPopupOpen: false,\n    });\n  };\n\n  render() {\n    const {\n      listWords,\n      starredWords,\n      word,\n      isStarred,\n      filterPathOfSpeech,\n      isInfoPopupOpen,\n      wordInfo,\n    } = this.state;\n\n    const uniqSortListWords = uniqSortFilter(listWords, word);\n\n    const newListWordsWithStar = finsStarredElements(\n      uniqSortListWords,\n      starredWords\n    );\n\n    const filterStarredWord = isStarred\n      ? filterStarredWords(starredWords, word)\n      : starredWords;\n\n    const filterPathOfSpeechStarredWord = filterWordsPathOfSpeech({\n      items: filterStarredWord,\n      filter: filterPathOfSpeech,\n    });\n\n    return (\n      <div className={classes.app}>\n        <Header\n          toggleKeeper={this.handleChangeOnKeeper}\n          toggleStarred={this.handleChangeOnStarred}\n        />\n        <Switch>\n          <HandleOpenInfoPopup.Provider value={this.handleClickWord}>\n            <IsStarredContext.Provider value={isStarred}>\n              <SearchValueContext.Provider\n                value={{\n                  inputWord: word,\n                  handleChangeSearch: this.handleChangeSearchWord,\n                }}\n              >\n                <HandleStarredWordContext.Provider\n                  value={{\n                    handleStarredWord: this.handleStarredWord,\n                    handleUpdateStorageStarred: this\n                      .handleRefreshStorageStarredWords,\n                  }}\n                >\n                  <HandleSetPathOfSpeechContext.Provider\n                    value={this.handleSetPathOfSpeech}\n                  >\n                    <Route exact path=\"/online-dictionary/\">\n                      <ListWordsContext.Provider value={newListWordsWithStar}>\n                        <WordBoard />\n                      </ListWordsContext.Provider>\n                    </Route>\n                    <Route path=\"/online-dictionary/starred\">\n                      <ListWordsContext.Provider\n                        value={filterPathOfSpeechStarredWord}\n                      >\n                        <WordBoard />\n                      </ListWordsContext.Provider>\n                    </Route>\n                  </HandleSetPathOfSpeechContext.Provider>\n                </HandleStarredWordContext.Provider>\n              </SearchValueContext.Provider>\n            </IsStarredContext.Provider>\n            <InfoPopup\n              isOpen={isInfoPopupOpen}\n              onClose={this.handleClosePopup}\n              {...wordInfo}\n            />\n          </HandleOpenInfoPopup.Provider>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nfunction finsStarredElements(targetArray, additionalArray) {\n  return targetArray.map((itemKeep) => {\n    const starKeep = additionalArray.find(\n      (itemStar) => itemKeep.word === itemStar.word\n    );\n\n    if (starKeep) {\n      return { ...starKeep, starred: true };\n    }\n    return itemKeep;\n  });\n}\n\nfunction filterStarredWords(array, filter) {\n  return array.filter((item) => {\n    if (filter === '') {\n      return true;\n    } else {\n      return item.word.includes(filter);\n    }\n  });\n}\n\nfunction uniqSortFilter(array, filter) {\n  return _.uniqWith(\n    [...array]\n      .sort((prev, next) => (prev.word < next.word ? -1 : 1))\n      .filter((item) => item.word.includes(filter))\n      .slice(-10),\n    _.isEqual\n  );\n}\n\nfunction filterWordsPathOfSpeech({ items, filter }) {\n  const filterWords = items.filter((words) => {\n    const infoWord = words.results !== undefined ? words.results['0'] : null;\n    const { partOfSpeech } = infoWord || {\n      partOfSpeech: 'missing',\n    };\n    switch (filter) {\n      case 'noun':\n        return partOfSpeech === filter;\n      case 'verb':\n        return partOfSpeech === filter;\n      case 'adjective':\n        return partOfSpeech === filter;\n      default:\n        return true;\n    }\n  });\n\n  return filterWords;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ItemList_item__Im1Dn\",\"name\":\"ItemList_name__3Fte5\",\"part\":\"ItemList_part__1SLEX\",\"brief\":\"ItemList_brief__3AA3U\",\"findStar\":\"ItemList_findStar__2xANc\",\"definition\":\"ItemList_definition__1hT9O\",\"star\":\"ItemList_star__3DKi3\",\"burger\":\"ItemList_burger__7uCXD\",\"star__active\":\"ItemList_star__active__39PQE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterSpeech\":\"FilterSpeech_filterSpeech__1oyVS\",\"label\":\"FilterSpeech_label__3vJp-\",\"checkbox\":\"FilterSpeech_checkbox__2VZs-\",\"title\":\"FilterSpeech_title__3U2Bc\"};"],"sourceRoot":""}